Decimal to Binary:
0 -> 0 
1 -> 1
2 -> 10
3 -> 11
4 -> 100
5 -> 101
6 -> 110

pattern -> every odd decimal no. will end with bit 1 in binary and every even decimal no. will end with bit 0 in binary.
## Maximum value that can be stored in a X bit value: 2^x - 1  
 for exp : max value in a 2bit no : 11 = 2^2 -1=4-1=3(decimal)

1<<m = 2^m

Max value that an singed integer datatype can store = (1<<31)-1
Max value that an unsinged integer datatype can store = (1<<32)-1

Set bit = if bit is 1
unset bit = if bit is 0

LSB = Right Most bit (end bit in representation) 
MSB = Left Most bit (start bit in representation)

// Here i in all ques is index based

Q: To check ith bit in a given no. is set or not?
soln: Take another binary no which has ith bit as 1 and rest all bit 0  --> taken no.
	Then perform binary AND(&) operation of given no. with taken no. 
	if result comes non zero --> then ith bit is set
	result is zero --> ith bit is not set

How to generate taken no. : 1<<i  where i is ith bit as 1 and rest all bit is 0

Q: How to make ith bit of a no. set bit
soln: Take another no which has ith bit 1(set) and rest all bit 0(unset) --> taken no.
	Then perform binary OR(|) operation of a given no. with taken no.
	Result will be ith bit as set :)

Q: How to make ith bit of a no. Unset bit
soln: Take another no. which has ith bit 0(unset) and rest all bit 1(set) -->unsetTaken
	Then perform binary And(&) operation of given ni. with unsetTaken no.
	Result will make ith bit unset.
How to generate unsetTaken no. : ~(1<<i) where ith bit is 1 and rest all bit is 0 and ~ is reversing it

Q:How to toggle ith bit of given no (meaning making ith with 1 if 0 or o if 1)
soln: Take a no. which has ith bit 1 and rest all bit 0 --> taken no.
	then perform XOR(^) operation of given no. with taken no.
syntax : a^(1<<i) where a is given no. and i is ith bit to be toggled



Q: Count Set bit in a no. (no. of 1s in a no.)
soln:

int cnt=0;
for(int i=31;i>=0;--i){
	if((a&(1<<i))!=0){
		cnt++;
	}
}
return cnt;
